.container-fluid.text-center.px-4.py-5
  %h1.pb-2
    %input{ type: 'text', name: 'name', value: @room.name, class: 'border-dark border-1 shadow bg-primary text-white p-0', 'data-submit': 'name', style: 'text-align: center' }
  = render partial: 'devise/shared/error_messages', locals: { resource: @room }
  .row.g-4.py-5.row-cols-1.row-cols-lg-3
    .col
      %h3 STEP 1:
      %div
        %i.fas.fa-search
        %span.fs-5 Search a Song
      .col-9.mx-auto
        = render 'tracks/search_tracks'
    .col
      %h3 STEP 2:
      %div
        %i.fas.fa-headphones
        %span.fs-5 Create a Playlist
      %p{ class: 'd-none', 'data-validation': 'message', 'data-name': 'playlist' }
        #room_playlist.card.text-dark
          - if @room.tracks.any?
            = render 'tracks/track', tracks: @room.tracks.reverse_order
    .col.mx-md-auto
      %h3 STEP 3:
      %div
        %i.fas.fa-check-circle
        %span.fs-5 Finish Setup
      = form_with model: @room, local: true, id: 'rooms_form' do |f|
        %div{ 'data-input': 'trackIds' }
        = f.hidden_field :name
        %br
        = f.submit 'Create Game', {data: { disable_with: false }, class: 'btn btn-primary btn-lg' }
:javascript
  function removeParentElem() {
    if (this.dataset.target != 'parent') return;
    $(this).fadeOut(200, () => {
      $(this).parent().parent().remove();
    });
  };
  function getTrackList() {
    let tracks = document.querySelectorAll('[data-track]');
    // Extract track id using map function from Array
    return Array.prototype.map.call(tracks, ({ dataset }) => dataset.track);
  }
  function createInputElem(trackIds) {
    return trackIds.reduce((result, trackId) => result.concat(`<input type="hidden" value="${trackId}" name="room[track_ids][]" id="room_track_ids">\n`), '');
  }
  function checkMinTracks() {
    let isValid = getTrackList().length >= 5;
    if (!isValid) {
      $('[data-validation=message][data-name=playlist]').removeClass('d-none').addClass('text-warning').text('Tracks must be at least 5');
    }
    return isValid;
  }
  $(document).on('ajax:success', () => {
    $("[data-animate='fadeOut']").on('click', removeParentElem);
  });
  $(document).on('turbolinks:load', () => {
    $("[data-animate='fadeOut']").on('click', removeParentElem);
    $('[data-submit=name]').on('change', (ev) => $('#room_name').val(ev.target.value));
    $('#rooms_form').on('submit', function (evt) {
      $('#rooms_form').find('input[type=submit]').attr('disabled', true); // Disable button
      evt.preventDefault();
      if (checkMinTracks()) {
        $("[data-input='trackIds']").html(createInputElem(getTrackList()));
        evt.target.submit();
      } else {
        $('#rooms_form').find('input[type=submit]').attr('disabled', false);
      }
    });
  });